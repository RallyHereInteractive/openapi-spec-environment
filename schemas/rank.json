{
  "openapi": "3.1.0",
  "info": {
    "title": "rank-api",
    "description": "RallyHere rank-api.",
    "version": "0.2.0"
  },
  "servers": [
    {
      "url": "/rank"
    }
  ],
  "paths": {
    "/v1/rank:calculate": {
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Update Rankings V1",
        "description": "Calculate and update on players and persist their new ranks\nRequires at least two teams, and the player's ranks before the last match was played\n\nRequired Permissions: `rank:update:any`\n**DEPRECATED** Use the v2 endpoint instead",
        "operationId": "update_rankings_v1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/player/me/rank/{rank_id}": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get Player Uuid Rank Self",
        "description": "Get current player's rank for a specific rank id\n            \nRequired Permissions: `rank:read:self`\n**DEPRECATED** Use the V2 endpoint",
        "operationId": "get_player_uuid_rank_self",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Update Player Uuid Rank Self",
        "description": "Update current player's ranks to those that are provided. Ranks are taken as is \n\nRequired Permissions: `rank:update:self`\n**DEPRECATED** Use the V2 endpoint",
        "operationId": "update_player_uuid_rank_self",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRankUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/player/{player_uuid}/rank/{rank_id}": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get Player Uuid Rank",
        "description": "Get a specific player's rank for a specific rank id\n            \nRequired Permissions: `rank:read:self` for players acting on themselves, \notherwise `rank:read:any`\n**DEPRECATED** Use the V2 endpoint",
        "operationId": "get_player_uuid_rank",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Update Player Uuid Rank",
        "description": "Update a specific player's ranks to those that are provided. Ranks are taken as is\n\nRequired Permissions: `rank:update:self` for players acting on themselves, \notherwise `rank:update:any`\n**DEPRECATED** Use V2 endpoints",
        "operationId": "update_player_uuid_rank",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRankUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/player/me/rank": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get All Player Uuid Ranks Self",
        "description": "Get all of current player's ranks\n\nRequired Permissions: `rank:read:self`\n**DEPRECATED** Use the V2 endpoints",
        "operationId": "get_all_player_uuid_ranks_self",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/player/{player_uuid}/rank": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get All Player Uuid Ranks",
        "description": "Get all of a specific player's ranks\n\nRequired Permissions: `rank:read:self` for players acting on themselves,\notherwise `rank:read:any`\n**DEPRECATED** Use the V2 endpoint",
        "operationId": "get_all_player_uuid_ranks",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v2/rank:calculate": {
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Calculate V2 Ranks",
        "description": "Calculate a rank update on players and persist their new ranks\nRequires at least two teams, and the players' ranks before the last match was played\n\nRequired Permissions: `rank:update:any`",
        "operationId": "calculate_v2_ranks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankUpdateRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v2/player/me/rank/{rank_id}": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get Player Uuid Rank Self V2",
        "description": "Get current player's rank for a specific rank id\n\nRequired Permissions: `rank:read:self`",
        "operationId": "get_player_uuid_rank_self_v2",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Update Player Uuid Rank Self V2",
        "description": "Update current player's ranks to those that are provided. Ranks are taken as is \n\nRequired Permissions: `rank:update:self`",
        "operationId": "update_player_uuid_rank_self_v2",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRankUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v2/player/{player_uuid}/rank/{rank_id}": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get Player Uuid Rank V2",
        "description": "Get a specific player's rank for a specific rank id\n\nRequired Permissions: `rank:read:self` for players acting on themselves, \notherwise `rank:read:any`",
        "operationId": "get_player_uuid_rank_v2",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      },
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Update Player Uuid Rank V2",
        "description": "Update a specific player's ranks to those that are provided. Ranks are taken as is\n\nRequired Permissions: `rank:update:self` for players acting on themselves, \notherwise `rank:update:any`",
        "operationId": "update_player_uuid_rank_v2",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRankUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankUpdateResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v2/player/me/rank": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get All Player Uuid Ranks Self V2",
        "description": "Get all of current player's ranks\n\nRequired Permissions: `rank:read:self`",
        "operationId": "get_all_player_uuid_ranks_self_v2",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v2/player/{player_uuid}/rank": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get All Player Uuid Ranks V2",
        "description": "Get all of a specific player's ranks\n\nRequired Permissions: `rank:read:self` for players acting on themselves,\notherwise `rank:read:any`",
        "operationId": "get_all_player_uuid_ranks_v2",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            },
            "name": "player_uuid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerRankRequestResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v3/rank": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get All Rank Config V3",
        "description": "Get all rank configuration\n\nRequired Permissions: `rank:read:config`",
        "operationId": "get_all_rank_config_v3",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankConfigRequestResponseV3"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v3/rank/{rank_id}": {
      "get": {
        "tags": [
          "rank"
        ],
        "summary": "Get Rank Config V3",
        "description": "Get rank configuration for specific rank id\n\nRequired Permissions: `rank:read:config`",
        "operationId": "get_rank_config_v3",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Rank Id"
            },
            "name": "rank_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankConfigRequestResponseV3"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v3/rank:calculate": {
      "post": {
        "tags": [
          "rank"
        ],
        "summary": "Calculate V3 Ranks",
        "description": "Calculate a rank update on players and return the results without persisting them\nRequires at least two teams, the players' ranks before the last match was played, and parameters on how to calculate the rank changes\n\nRequired Permissions:\n\n- For any player (including themselves) any of: `rank:*`, `rank:calculate`",
        "operationId": "calculate_v3_ranks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateRankRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateRankResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CalculateRankConfig": {
        "properties": {
          "max_mu": {
            "type": "number",
            "title": "Max Mu",
            "description": "The maximum mu value achievable. Any attempts to update a rank value to be higher than this get clamped to the maximum"
          },
          "min_mu": {
            "type": "number",
            "title": "Min Mu",
            "description": "The minimum mu value achievable. Any attempts to update a rank value to be lower than this get clamped to the minimum"
          },
          "min_sigma": {
            "type": "number",
            "exclusiveMinimum": true,
            "title": "Min Sigma",
            "description": "The minimum sigma allowed. Any attempts to update sigma to be lower than this get clamped to the minimum",
            "minimum": 0
          },
          "beta": {
            "type": "number",
            "title": "Beta",
            "description": "The distance between skill ranks that yields ~76% chance of winning. Recommended value is half the default sigma"
          },
          "default_mu": {
            "type": "number",
            "title": "Default Mu",
            "description": "The default mu value for this rank id. Will be used when players do not have any rank history"
          },
          "default_sigma": {
            "type": "number",
            "exclusiveMinimum": true,
            "title": "Default Sigma",
            "description": "The default sigma for this rank id. Will be used when players do not have any rank history",
            "minimum": 0
          },
          "draw_probability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Draw Probability",
            "description": "The percent probability of a draw occuring in the game. Must be in [0, 1)"
          },
          "tau": {
            "type": "number",
            "title": "Tau",
            "description": "Factor that determines how quickly a player's sigma is adjusted. A larger tau will result in more volatile in ranks. Recommended value is is (default_sigma * .01)"
          }
        },
        "type": "object",
        "required": [
          "max_mu",
          "min_mu",
          "min_sigma",
          "default_mu",
          "default_sigma"
        ],
        "title": "CalculateRankConfig",
        "description": "Config about how to recalculate ranks"
      },
      "CalculateRankRequest": {
        "properties": {
          "match_length_seconds": {
            "type": "integer",
            "minimum": 0,
            "title": "Match Length Seconds",
            "description": "How many seconds the match lasted"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/RankedTeam"
            },
            "type": "array",
            "title": "Teams",
            "description": "List of teams that participated in this match"
          },
          "rank_config": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CalculateRankConfig"
              }
            ],
            "title": "Rank Config",
            "description": "Configs about how to recalculate and clamp newly calculated ranks"
          }
        },
        "type": "object",
        "required": [
          "match_length_seconds",
          "teams",
          "rank_config"
        ],
        "title": "CalculateRankRequest",
        "description": "A request body to calculate players' rankings, and return the results. Player ranks will not be updated"
      },
      "CalculateRankResponse": {
        "properties": {
          "updated_players": {
            "items": {
              "$ref": "#/components/schemas/PlayerRank"
            },
            "type": "array",
            "title": "Updated Players",
            "description": "List of players and their updated ranks"
          }
        },
        "type": "object",
        "required": [
          "updated_players"
        ],
        "title": "CalculateRankResponse",
        "description": "A response to recalculating players' ranks"
      },
      "CalculatedRank": {
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "UUID for this specific player"
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RankData"
              }
            ],
            "title": "Rank",
            "description": "Current rank info about player"
          },
          "seconds_in_match": {
            "type": "integer",
            "minimum": 0,
            "title": "Seconds In Match",
            "description": "How many seconds this player was in the match"
          }
        },
        "type": "object",
        "required": [
          "player_uuid",
          "rank",
          "seconds_in_match"
        ],
        "title": "CalculatedRank",
        "description": "Additional data about a specific player's rank and previous match in order to make rank calculations"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HzApiErrorModel": {
        "properties": {
          "auth_success": {
            "type": "boolean",
            "title": "Auth Success",
            "default": true
          },
          "error_code": {
            "type": "string",
            "title": "Error Code"
          },
          "desc": {
            "type": "string",
            "title": "Desc"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "desc"
        ],
        "title": "HzApiErrorModel"
      },
      "PlayerRank": {
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "UUID for this specific player"
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RankData"
              }
            ],
            "title": "Rank",
            "description": "Current rank info about player"
          }
        },
        "type": "object",
        "required": [
          "player_uuid",
          "rank"
        ],
        "title": "PlayerRank",
        "description": "Rank data about a specific player"
      },
      "PlayerRankRequestResponse": {
        "properties": {
          "player_ranks": {
            "items": {
              "$ref": "#/components/schemas/PlayerRankResponse"
            },
            "type": "array",
            "title": "Player Ranks",
            "description": "List of player's ranks"
          }
        },
        "type": "object",
        "required": [
          "player_ranks"
        ],
        "title": "PlayerRankRequestResponse",
        "description": "DEPRECATED Response to successfully requesting all of a player's ranks"
      },
      "PlayerRankRequestResponseV2": {
        "properties": {
          "player_ranks": {
            "items": {
              "$ref": "#/components/schemas/PlayerRankResponseV2"
            },
            "type": "array",
            "title": "Player Ranks",
            "description": "List of player's ranks"
          }
        },
        "type": "object",
        "required": [
          "player_ranks"
        ],
        "title": "PlayerRankRequestResponseV2",
        "description": "Response to successfully requesting all of a player's ranks"
      },
      "PlayerRankResponse": {
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "UUID for this specific player"
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RankData"
              }
            ],
            "title": "Rank",
            "description": "Current rank info about player"
          },
          "rank_id": {
            "type": "integer",
            "minimum": 1,
            "title": "Rank Id",
            "description": "ID for this rank"
          }
        },
        "type": "object",
        "required": [
          "player_uuid",
          "rank",
          "rank_id"
        ],
        "title": "PlayerRankResponse",
        "description": "DEPRECATED Response to successfully requesting a player's rank"
      },
      "PlayerRankResponseV2": {
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "UUID for this specific player"
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RankData"
              }
            ],
            "title": "Rank",
            "description": "Current rank info about player"
          },
          "rank_id": {
            "type": "string",
            "minLength": 1,
            "title": "Rank Id",
            "description": "ID for this rank"
          }
        },
        "type": "object",
        "required": [
          "player_uuid",
          "rank",
          "rank_id"
        ],
        "title": "PlayerRankResponseV2",
        "description": "Response to successfully requesting a player's rank"
      },
      "PlayerRankUpdateRequest": {
        "properties": {
          "instance_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Instance Id",
            "description": "ID for the instance the match took place on"
          },
          "rank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RankData"
              }
            ],
            "title": "Rank",
            "description": "Current rank info about player"
          }
        },
        "type": "object",
        "required": [
          "rank"
        ],
        "title": "PlayerRankUpdateRequest",
        "description": "Request body to update generic rank data"
      },
      "PlayerRankUpdateResponse": {
        "properties": {
          "updated_players": {
            "items": {
              "$ref": "#/components/schemas/PlayerRankResponse"
            },
            "type": "array",
            "title": "Updated Players",
            "description": "List of players and their updated ranks"
          }
        },
        "type": "object",
        "required": [
          "updated_players"
        ],
        "title": "PlayerRankUpdateResponse",
        "description": "DEPRECATED Response to successfully updating players' ranks"
      },
      "PlayerRankUpdateResponseV2": {
        "properties": {
          "updated_players": {
            "items": {
              "$ref": "#/components/schemas/PlayerRankResponseV2"
            },
            "type": "array",
            "title": "Updated Players",
            "description": "List of players and their updated ranks"
          }
        },
        "type": "object",
        "required": [
          "updated_players"
        ],
        "title": "PlayerRankUpdateResponseV2",
        "description": "Response to successfully updating players' ranks"
      },
      "RankConfigRequestResponseV3": {
        "properties": {
          "rank_configs": {
            "items": {
              "$ref": "#/components/schemas/RankConfigV3"
            },
            "type": "array",
            "title": "Rank Configs",
            "description": "List of rank configurations"
          }
        },
        "type": "object",
        "required": [
          "rank_configs"
        ],
        "title": "RankConfigRequestResponseV3",
        "description": "Response to successfully requesting all rank config"
      },
      "RankConfigV3": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human readable name for this rank"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of this rank"
          },
          "custom_data": {
            "additionalProperties": {
              "type": "string",
              "maxLength": 4096,
              "minLength": 1
            },
            "type": "object",
            "title": "Custom Data",
            "description": "Custom data about this rank"
          },
          "max_mu": {
            "type": "number",
            "title": "Max Mu",
            "description": "The maximum mu value achievable. Any attempts to update a rank value to be higher than this get clamped to the maximum"
          },
          "min_mu": {
            "type": "number",
            "title": "Min Mu",
            "description": "The minimum mu value achievable. Any attempts to update a rank value to be lower than this get clamped to the minimum"
          },
          "min_sigma": {
            "type": "number",
            "exclusiveMinimum": true,
            "title": "Min Sigma",
            "description": "The minimum sigma allowed. Any attempts to update sigma to be lower than this get clamped to the minimum",
            "minimum": 0
          },
          "beta": {
            "type": "number",
            "title": "Beta",
            "description": "The distance between skill ranks that yields ~76% chance of winning. Recommended value is half the default sigma"
          },
          "default_mu": {
            "type": "number",
            "title": "Default Mu",
            "description": "The default mu value for this rank id. Will be used when players do not have any rank history"
          },
          "default_sigma": {
            "type": "number",
            "exclusiveMinimum": true,
            "title": "Default Sigma",
            "description": "The default sigma for this rank id. Will be used when players do not have any rank history",
            "minimum": 0
          },
          "draw_probability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Draw Probability",
            "description": "The percent probability of a draw occuring in the game. Must be in [0, 1)"
          },
          "tau": {
            "type": "number",
            "title": "Tau",
            "description": "Factor that determines how quickly a player's sigma is adjusted. A larger tau will result in more volatile in ranks. Recommended value is is (default_sigma * .01)"
          },
          "rank_id": {
            "type": "string",
            "minLength": 1,
            "title": "Rank Id",
            "description": "ID for this rank type"
          }
        },
        "type": "object",
        "required": [
          "max_mu",
          "min_mu",
          "min_sigma",
          "default_mu",
          "default_sigma",
          "rank_id"
        ],
        "title": "RankConfigV3",
        "description": "Configuration about a specific rank type"
      },
      "RankData": {
        "properties": {
          "mu": {
            "type": "number",
            "title": "Mu",
            "description": "A measure of perceived skill in a player"
          },
          "sigma": {
            "type": "number",
            "exclusiveMinimum": true,
            "title": "Sigma",
            "description": "A measure of how confident we are in the perceived skill (high sigma means low confidence)",
            "minimum": 0
          },
          "custom_data": {
            "additionalProperties": {
              "type": "string",
              "maxLength": 4096,
              "minLength": 1
            },
            "type": "object",
            "title": "Custom Data",
            "description": "Custom key-value player rank data",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "mu",
          "sigma"
        ],
        "title": "RankData",
        "description": "Ranked data about a player's skill and confidence levels"
      },
      "RankUpdateRequest": {
        "properties": {
          "instance_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Instance Id",
            "description": "ID for the instance the match took place on"
          },
          "rank_id": {
            "type": "integer",
            "minimum": 1,
            "title": "Rank Id",
            "description": "ID for the rank type used in this match"
          },
          "match_length_seconds": {
            "type": "integer",
            "minimum": 0,
            "title": "Match Length Seconds",
            "description": "How many seconds the match lasted"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/RankedTeam"
            },
            "type": "array",
            "title": "Teams",
            "description": "List of teams that participated in this match"
          }
        },
        "type": "object",
        "required": [
          "rank_id",
          "match_length_seconds",
          "teams"
        ],
        "title": "RankUpdateRequest",
        "description": "DEPRECATED A request body to calculate and update players' ratings from a match"
      },
      "RankUpdateRequestV2": {
        "properties": {
          "instance_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Instance Id",
            "description": "ID for the instance the match took place on"
          },
          "rank_id": {
            "type": "string",
            "minLength": 1,
            "title": "Rank Id",
            "description": "ID for the rank type used in this match"
          },
          "match_length_seconds": {
            "type": "integer",
            "minimum": 0,
            "title": "Match Length Seconds",
            "description": "How many seconds the match lasted"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/RankedTeam"
            },
            "type": "array",
            "title": "Teams",
            "description": "List of teams that participated in this match"
          }
        },
        "type": "object",
        "required": [
          "rank_id",
          "match_length_seconds",
          "teams"
        ],
        "title": "RankUpdateRequestV2",
        "description": "A request body to calculate and update players' ratings from a match"
      },
      "RankedTeam": {
        "properties": {
          "players": {
            "items": {
              "$ref": "#/components/schemas/CalculatedRank"
            },
            "type": "array",
            "title": "Players",
            "description": "List of CalculatedRank objects that give stats about a specific player from the match"
          },
          "team_rank": {
            "type": "integer",
            "minimum": 1,
            "title": "Team Rank",
            "description": "What rank this team came in. 1 indicates victory, and higher values are placements. Matching ranks indicate draws"
          }
        },
        "type": "object",
        "required": [
          "players",
          "team_rank"
        ],
        "title": "RankedTeam",
        "description": "One team of players from a match along with their placement in the match, and previous rank data about all of the players"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearerHeadersOrCookie": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "rank",
      "description": "\n\nThis API is used to update players ranks after matches\n\n"
    }
  ]
}
