{
  "openapi": "3.1.0",
  "info": {
    "title": "ad-api",
    "description": "Hi-Rez Studios ad-api.",
    "version": "2.1.0"
  },
  "servers": [
    {
      "url": "/ad"
    }
  ],
  "paths": {
    "/v1/session": {
      "post": {
        "tags": [
          "Ad"
        ],
        "summary": "Begin New Session",
        "description": "Start a new session for the user. This will generate a new ad api token that is returned in the response header.",
        "operationId": "begin_new_session",
        "parameters": [
          {
            "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Hz-Ad-Api-Token",
              "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated."
            },
            "name": "x-hz-ad-api-token",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_begin_new_session"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/opportunity": {
      "post": {
        "tags": [
          "Ad"
        ],
        "summary": "Find Opportunities",
        "description": "Find ad opportunities for the user given optional screen sizes. This will generate a new ad api token that is returned in the response header.",
        "operationId": "find_opportunities",
        "parameters": [
          {
            "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Hz-Ad-Api-Token",
              "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated."
            },
            "name": "x-hz-ad-api-token",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_find_opportunities"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdOpportunities"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/opportunity/{opportunity_id}": {
      "post": {
        "tags": [
          "Ad"
        ],
        "summary": "Update Opportunity By Id",
        "description": "Update the opportunity with the given id. This will generate a new ad api token that is returned in the response header.",
        "operationId": "update_opportunity_by_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Opportunity Id"
            },
            "name": "opportunity_id",
            "in": "path"
          },
          {
            "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated.",
            "required": false,
            "schema": {
              "type": "string",
              "title": "X-Hz-Ad-Api-Token",
              "description": "Optional header to make calling the endpoint faster by not requiring a new token to be generated."
            },
            "name": "x-hz-ad-api-token",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_opportunity_by_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-hz-ad-api-token": {
                "description": "Provide this token to future requests for the same user to make their requests faster (as a new token doesn't need to be generated)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/unity/ad/watched": {
      "get": {
        "tags": [
          "Ad"
        ],
        "summary": "Unity Ad Watched",
        "description": "Callback URL for the Unity Ad API. Docs here https://docs.unity.com/ads/ImplementingS2SRedeemCallbacks.html",
        "operationId": "unity_ad_watched",
        "parameters": [
          {
            "description": "Product ID in the Unity console",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Productid",
              "description": "Product ID in the Unity console"
            },
            "name": "productid",
            "in": "query"
          },
          {
            "description": "Server ID that contains custom data. Expected to be a comma separated list of platform and player ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1,
              "title": "Sid",
              "description": "Server ID that contains custom data. Expected to be a comma separated list of platform and player ID"
            },
            "example": "ios,12345",
            "name": "sid",
            "in": "query"
          },
          {
            "description": "Unique ID for the ad view generated by Unity",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Oid",
              "description": "Unique ID for the ad view generated by Unity"
            },
            "name": "oid",
            "in": "query"
          },
          {
            "description": "The HMAC-MD5 hash of the parameter string used to validate the request",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hmac",
              "description": "The HMAC-MD5 hash of the parameter string used to validate the request"
            },
            "name": "hmac",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/unity/mediation/watched": {
      "get": {
        "tags": [
          "Ad"
        ],
        "summary": "Unity Mediation Ad Watched",
        "description": "Callback URL for the Unity Ad API. Docs here https://docs.unity.com/mediation/S2SRedeemCallbacks.html",
        "operationId": "unity_mediation_ad_watched",
        "parameters": [
          {
            "description": "Custom data provide by client. Expected to be client type",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Customized Data",
              "description": "Custom data provide by client. Expected to be client type"
            },
            "example": "android",
            "name": "customized_data",
            "in": "query"
          },
          {
            "description": "User ID provided by the client",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1,
              "title": "Userid",
              "description": "User ID provided by the client"
            },
            "name": "userId",
            "in": "query"
          },
          {
            "description": "Unique ID for the ad view generated by Unity",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Eventid",
              "description": "Unique ID for the ad view generated by Unity"
            },
            "name": "eventId",
            "in": "query"
          },
          {
            "description": "Timestamp of an ad event in Unix format",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Timestamp",
              "description": "Timestamp of an ad event in Unix format"
            },
            "name": "timestamp",
            "in": "query"
          },
          {
            "description": "The HMAC-MD5 hash of the parameter string used to validate the request",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Signature",
              "description": "The HMAC-MD5 hash of the parameter string used to validate the request"
            },
            "name": "signature",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdOpportunities": {
        "properties": {
          "opportunities": {
            "items": {
              "$ref": "#/components/schemas/AdOpportunity"
            },
            "type": "array",
            "title": "Opportunities"
          }
        },
        "type": "object",
        "required": [
          "opportunities"
        ],
        "title": "AdOpportunities"
      },
      "AdOpportunity": {
        "properties": {
          "ad_url": {
            "type": "string",
            "title": "Ad Url",
            "description": "The URL to the ad"
          },
          "seconds": {
            "type": "integer",
            "minimum": 0,
            "title": "Seconds",
            "description": "The number of seconds the ad is"
          },
          "opportunity_id": {
            "type": "string",
            "minLength": 1,
            "title": "Opportunity Id",
            "description": "The ID of the ad opportunity"
          }
        },
        "type": "object",
        "required": [
          "ad_url",
          "seconds",
          "opportunity_id"
        ],
        "title": "AdOpportunity"
      },
      "Body_begin_new_session": {
        "properties": {
          "country_code": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "title": "Country Code",
            "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code for the user"
          },
          "device_id": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Device Id",
            "description": "Unique Identifier for the device a session is started on.  E.g should be the same for multiple users on the same device."
          }
        },
        "type": "object",
        "required": [
          "country_code"
        ],
        "title": "Body_begin_new_session"
      },
      "Body_find_opportunities": {
        "properties": {
          "screen_pixel_width": {
            "type": "integer",
            "title": "Screen Pixel Width",
            "description": "Width of the screen in pixels"
          },
          "screen_pixel_height": {
            "type": "integer",
            "title": "Screen Pixel Height",
            "description": "Height of the screen in pixels"
          },
          "country_code": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "title": "Country Code",
            "description": "[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code for the user"
          },
          "language_code": {
            "type": "string",
            "maxLength": 3,
            "minLength": 2,
            "title": "Language Code",
            "description": "[ISO 639-2](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code"
          },
          "device_id": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Device Id",
            "description": "Unique Identifier for the device a session is started on.  E.g should be the same for multiple users on the same device."
          }
        },
        "type": "object",
        "required": [
          "country_code",
          "language_code"
        ],
        "title": "Body_find_opportunities"
      },
      "Body_update_opportunity_by_id": {
        "properties": {
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityState"
              }
            ],
            "description": "State of the opportunity"
          },
          "abort_reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityAbortReason"
              }
            ],
            "description": "Reason for aborting the opportunity"
          },
          "abort_seconds": {
            "type": "integer",
            "minimum": 0,
            "title": "Abort Seconds",
            "description": "Number of seconds into the video when the abort happened"
          }
        },
        "type": "object",
        "required": [
          "state"
        ],
        "title": "Body_update_opportunity_by_id"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HzApiErrorModel": {
        "properties": {
          "auth_success": {
            "type": "boolean",
            "title": "Auth Success",
            "default": true
          },
          "error_code": {
            "type": "string",
            "title": "Error Code"
          },
          "desc": {
            "type": "string",
            "title": "Desc"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "desc"
        ],
        "title": "HzApiErrorModel"
      },
      "OpportunityAbortReason": {
        "type": "string",
        "enum": [
          "cancel",
          "other"
        ],
        "title": "OpportunityAbortReason",
        "description": "An enumeration.",
        "x-enum-descriptions": [
          "Ad was closed by the user",
          "Ad was closed from a misc cause"
        ],
        "x-enum-varnames": [
          "CANCEL",
          "OTHER"
        ]
      },
      "OpportunityState": {
        "type": "string",
        "enum": [
          "start",
          "complete",
          "abort"
        ],
        "title": "OpportunityState",
        "description": "An enumeration.",
        "x-enum-descriptions": [
          "User started watching the ad",
          "User finished watching the ad",
          "User stopped watching the ad partway through"
        ],
        "x-enum-varnames": [
          "START",
          "COMPLETE",
          "ABORT"
        ]
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearerHeadersOrCookie": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Ad",
      "description": "Ad endpoints are used to present ads to users, and grant rewards to them for doing so.\n\nThe system uses an external ad provider to present opportunities to the user.  Currently, the only supported provider is Unity Ads.  Please contact your RallyHere representative for more information.\n\nNote that each endpoint can return a `x-hz-ad-api-token` header, which should be reused whenever possible for future requests.  This is an optimization that should improve future request times, as they won't require a secondary authentication with the external ad provider.\n"
    }
  ]
}
