{
  "openapi": "3.1.0",
  "info": {
    "title": "event-tracking-api",
    "description": "RallyHere event-tracking-api.",
    "version": "0.2.0"
  },
  "servers": [
    {
      "url": "/events"
    }
  ],
  "paths": {
    "/v1/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Receive Events V1",
        "description": "Post game events, return number of events being posted to Event Hub",
        "operationId": "receive_events_v1",
        "parameters": [
          {
            "name": "x-rh-client-addr",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 32
                },
                {
                  "type": "null"
                }
              ],
              "description": "IP Address hint",
              "title": "X-Rh-Client-Addr"
            },
            "description": "IP Address hint"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostGameEventsResponse"
                }
              }
            }
          },
          "207": {
            "description": "\nError Codes:\n- `events_multi_results` - Some of the events from the request failed to process, and uploaded to deadletter blob storage\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "\nError Codes:\n- `event_denied` - Events of that name are currently denied\n- `event_duplicated` - Event has the same event_uuid as an event already received\n- `event_lists_invalid` - The input eventLists is invalid, failed pydantic validation\n- `event_params_invalid` - The event_params failed validation against the jsonschema defined for the type/version.  See response description for more details. \n- `event_unsupported` - Event name is not known\n- `events_all_failed` - All of events from the request failed to process, and uploaded to deadletter blob storage\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "\nError Codes:\n- `event_schema_invalid` - event_params jsonschema is empty, failed to load from developer-api\n- `event_schema_not_found` - The jsonschema is invalid and could not be used to validate the event_params value.  See response description for more details.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/event-params-schema": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get All Event Schema",
        "description": "get all rh standard event and custom event params schema",
        "operationId": "get_all_event_schema",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParamsSchemaResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/validate": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Validate Event V1",
        "description": "Validate a single event, return validation result and the event json will be posted to Kafka",
        "operationId": "validate_event_v1",
        "parameters": [
          {
            "name": "x-rh-client-addr",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 32
                },
                {
                  "type": "null"
                }
              ],
              "description": "IP Address hint",
              "title": "X-Rh-Client-Addr"
            },
            "description": "IP Address hint"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RallyHereEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateEventResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EventList": {
        "properties": {
          "event_list": {
            "items": {
              "$ref": "#/components/schemas/RallyHereEvent"
            },
            "type": "array",
            "title": "Event List",
            "description": "List of events"
          }
        },
        "type": "object",
        "required": [
          "event_list"
        ],
        "title": "EventList"
      },
      "EventParamsSchemaResponse": {
        "properties": {
          "event_param_schemas": {
            "type": "object",
            "title": "Event Param Schemas",
            "description": "Dictionary contains event name and Json schema definition for its event_params parameter"
          }
        },
        "type": "object",
        "required": [
          "event_param_schemas"
        ],
        "title": "EventParamsSchemaResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HzApiErrorModel": {
        "properties": {
          "auth_success": {
            "type": "boolean",
            "title": "Auth Success",
            "default": true
          },
          "error_code": {
            "type": "string",
            "title": "Error Code"
          },
          "desc": {
            "type": "string",
            "title": "Desc"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "desc"
        ],
        "title": "HzApiErrorModel"
      },
      "PostGameEventsResponse": {
        "properties": {
          "posted_events": {
            "type": "integer",
            "title": "Posted Events",
            "description": "Number of events successfully posted to Event Hub"
          },
          "errors": {
            "items": {},
            "type": "array",
            "title": "Errors",
            "description": "list of validation failure for each event."
          }
        },
        "type": "object",
        "required": [
          "posted_events"
        ],
        "title": "PostGameEventsResponse"
      },
      "RallyHereEvent": {
        "properties": {
          "event_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Event Uuid",
            "description": "Unique Event ID for this instance of the event"
          },
          "event_name": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Event Name",
            "description": "Type of event to process this as."
          },
          "event_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Event Timestamp",
            "description": "Time the event was triggered"
          },
          "event_params": {
            "type": "object",
            "title": "Event Params",
            "description": "Event specific parameters"
          },
          "custom_data": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Custom Data",
            "description": "Event custom data"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "User who submitted the event"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session ID to associate the event with"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID to associate the event with"
          },
          "client_ip": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Ip",
            "description": "Client IP associated with the event"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "event_uuid",
          "event_name",
          "event_timestamp",
          "event_params"
        ],
        "title": "RallyHereEvent"
      },
      "ValidateEventResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Is event data valid against JsonSchema?"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "Validation error code"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context",
            "description": "Detailed validation error context"
          },
          "output_event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Event",
            "description": "Event json string that will be sent to Kafka topic"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "ValidateEventResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    {
      "name": "Events",
      "description": "Event Tracking"
    }
  ]
}
