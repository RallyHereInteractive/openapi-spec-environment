{
  "openapi": "3.1.0",
  "info": {
    "title": "match-api",
    "description": "RallyHere match-api.",
    "version": "0.2.0"
  },
  "servers": [
    {
      "url": "/match"
    }
  ],
  "paths": {
    "/v1/match": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Matches",
        "description": "Get pages of matches based on provided filters.\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:any:read`",
        "operationId": "get_matches",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          },
          {
            "name": "instance_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Instance Id"
            }
          },
          {
            "name": "allocation_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allocation Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "host_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Host Player Uuid"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Player Uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/MatchState"
                },
                {
                  "type": "null"
                }
              ],
              "title": "State"
            }
          },
          {
            "name": "include_segments",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Segments"
            }
          },
          {
            "name": "include_players",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Players"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedMatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Match"
        ],
        "summary": "Create Match",
        "description": "Create match by match_id.\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`\n\n- For match if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "create_match",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/match/{match_id}": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Match",
        "description": "Get match segment by match_id.\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:any:read`\n\n- For match if the player was in match any of: `match:*`, `match:match:player:read`",
        "operationId": "get_match",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Match"
        ],
        "summary": "Update Match",
        "description": "Update match by match_id.\n\nMatch must be in pending state to be updated.\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`\n\n- For match if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "update_match",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Match"
        ],
        "summary": "Patch Match",
        "description": "Update match by match_id only with provided fields.\n\nMatch must be in pending state to be updated.\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`\n\n- For match if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "patch_match",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Match"
        ],
        "summary": "Delete Match",
        "description": "Delete match by match_id\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`",
        "operationId": "delete_match",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/player/me/match": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Player Matches Self",
        "description": "Get all matches for self. Only provides matches for the player_uuid in the provided token.\n\nany of: `match:*`, `match:match:player:read`, `match:player:any:read` \n    \n: `match:player:self:read`",
        "operationId": "get_player_matches_self",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPlayerMatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/player/{player_uuid}/match": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Players Matches",
        "description": "Get All matches for a provided player_uuid.\n\nany of: `match:*`, `match:match:player:read`, `match:player:any:read` \n    \n: `match:player:self:read`",
        "operationId": "get_players_matches",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPlayerMatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/player/{player_uuid}/match/{match_id}": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Match Player",
        "description": "Get a player match record for the provided player_uuid and match_id\n\nany of: `match:*`, `match:match:player:read`, `match:player:any:read` \n    \n: `match:player:self:read`",
        "operationId": "get_match_player",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPlayerWithMatch"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Match"
        ],
        "summary": "Create Match Player",
        "description": "Create player match record for the provided player_uuid and match_id\n\nMust have one of the following permissions: any of: `match:*`, `match:match:edit:any`\n\nOr you have match:match:edit:authority and are the host of the match.",
        "operationId": "create_match_player",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchPlayerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPlayerWithMatch"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Match"
        ],
        "summary": "Update Match Player",
        "description": "Update player match record for the provided player_uuid and match_id\n    \nMatch must be in pending state to be updated.\n    \nany of: `match:*`, `match:match:edit:any` - update any match.\n\nany of: `match:*`, `match:match:edit:any`, `match:match:edit:authority` - update match if the player is the host of the match.",
        "operationId": "update_match_player",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchPlayerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPlayerWithMatch"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Match"
        ],
        "summary": "Patch Match Player",
        "description": "Update player match record for the provided player_uuid \" \"and match_id only with provided fields.\n\nMatch must still be in a pending state.\n\nRequired Permissions:   \n\n- For any match any of: `match:*`, `match:match:edit:any`\n\n- For match if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "patch_match_player",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchPlayerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPlayerWithMatch"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Match"
        ],
        "summary": "Delete Match Player",
        "description": "Delete player by player_uuid and match_id\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`",
        "operationId": "delete_match_player",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "player_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Player Uuid"
            }
          },
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/match/{match_id}/segment/{segment_id}": {
      "get": {
        "tags": [
          "Match"
        ],
        "summary": "Get Match Segment",
        "description": "Get match segment by match_id and segment_id.\n\n- For any match any of: `match:*`, `match:match:any:read`\n\n- For match if the player was in match any of: `match:*`, `match:match:player:read`",
        "operationId": "get_match_segment",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Segment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchSegmentWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Match"
        ],
        "summary": "Update Match Segment",
        "description": "Update match segment by match_id and segment_id.\n\nMatch must be in pending state to be updated.\n\nRequired Permissions:\n\n- For any match segment any of: `match:*`, `match:match:edit:any`\n\n- For match segment if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "update_match_segment",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Segment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchSegmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchSegmentWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Match"
        ],
        "summary": "Patch Match Segment",
        "description": "Update match segment by match_id and segment_id only with provided fields.\n\nMatch must be in pending state to be updated.\n\nRequired Permissions:\n\n- For any match segment any of: `match:*`, `match:match:edit:any`\n\n- For match segment if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "patch_match_segment",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Segment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchSegmentPatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchSegmentWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Match"
        ],
        "summary": "Delete Match Segment",
        "description": "Delete match segment by match_id and segment_id\n\nRequired Permissions:\n\n- For any match any of: `match:*`, `match:match:edit:any`",
        "operationId": "delete_match_segment",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Segment Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/match/{match_id}/segment": {
      "post": {
        "tags": [
          "Match"
        ],
        "summary": "Create Match Segment",
        "description": "Create match segment by match_id.\n\n- For any match segment any of: `match:*`, `match:match:edit:any`\n\n- For match segment if the player is the host any of: `match:*`, `match:match:edit:any`, `match:match:edit:authority`",
        "operationId": "create_match_segment",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "match_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Match Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchSegmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchSegmentWithPlayers"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pex/host/raw": {
      "get": {
        "tags": [
          "PEX"
        ],
        "summary": "Get All Pex Host Raw By Filter",
        "description": "Get pages of PEX host raw data based on provided filters\n\nRequired Permissions:\n\n- For any pex host any of: `match:*`, `match:pex:read`",
        "operationId": "get_all_pex_host_raw_by_filter",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          },
          {
            "name": "to_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Datetime"
            }
          },
          {
            "name": "from_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Datetime"
            }
          },
          {
            "name": "match_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Match Id"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "server_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Server Id"
            }
          },
          {
            "name": "allocation_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allocation Id"
            }
          },
          {
            "name": "datacenter_provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Provider"
            }
          },
          {
            "name": "datacenter_location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Location"
            }
          },
          {
            "name": "machine_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Class"
            }
          },
          {
            "name": "address_ip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Address Ip"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Map Name"
            }
          },
          {
            "name": "game_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Mode"
            }
          },
          {
            "name": "matchmaking_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Matchmaking Profile Id"
            }
          },
          {
            "name": "expected_team_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Team Size"
            }
          },
          {
            "name": "expected_player_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Player Count"
            }
          },
          {
            "name": "host_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Host Player Uuid"
            }
          },
          {
            "name": "owning_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Owning Player Uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PexHostPagedResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pex/host/score": {
      "get": {
        "tags": [
          "PEX"
        ],
        "summary": "Get All Pex Host Scores By Filter",
        "description": "Get pages of PEX host scores based on provided filters\n\nRequired Permissions:\n\n- For any pex client any of: `match:*`, `match:pex:read`",
        "operationId": "get_all_pex_host_scores_by_filter",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          },
          {
            "name": "to_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Datetime"
            }
          },
          {
            "name": "from_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Datetime"
            }
          },
          {
            "name": "match_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Match Id"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "server_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Server Id"
            }
          },
          {
            "name": "allocation_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allocation Id"
            }
          },
          {
            "name": "datacenter_provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Provider"
            }
          },
          {
            "name": "datacenter_location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Location"
            }
          },
          {
            "name": "machine_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Class"
            }
          },
          {
            "name": "address_ip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Address Ip"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Map Name"
            }
          },
          {
            "name": "game_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Mode"
            }
          },
          {
            "name": "matchmaking_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Matchmaking Profile Id"
            }
          },
          {
            "name": "expected_team_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Team Size"
            }
          },
          {
            "name": "expected_player_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Player Count"
            }
          },
          {
            "name": "host_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Host Player Uuid"
            }
          },
          {
            "name": "owning_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Owning Player Uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PexHostPagedResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pex/client/raw": {
      "get": {
        "tags": [
          "PEX"
        ],
        "summary": "Get All Pex Client Raw By Filter",
        "description": "Get pages of PEX client raw data based on provided filters\n\nRequired Permissions:\n\n- For any pex client any of: `match:*`, `match:pex:read`",
        "operationId": "get_all_pex_client_raw_by_filter",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          },
          {
            "name": "to_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Datetime"
            }
          },
          {
            "name": "from_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Datetime"
            }
          },
          {
            "name": "match_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Match Id"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "server_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Server Id"
            }
          },
          {
            "name": "allocation_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allocation Id"
            }
          },
          {
            "name": "datacenter_provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Provider"
            }
          },
          {
            "name": "datacenter_location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Location"
            }
          },
          {
            "name": "machine_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Class"
            }
          },
          {
            "name": "address_ip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Address Ip"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Map Name"
            }
          },
          {
            "name": "game_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Mode"
            }
          },
          {
            "name": "matchmaking_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Matchmaking Profile Id"
            }
          },
          {
            "name": "expected_team_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Team Size"
            }
          },
          {
            "name": "expected_player_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Player Count"
            }
          },
          {
            "name": "host_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Host Player Uuid"
            }
          },
          {
            "name": "owning_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Owning Player Uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          },
          {
            "name": "player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Player Uuid"
            }
          },
          {
            "name": "device_info",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PexClientPagedResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pex/client/score": {
      "get": {
        "tags": [
          "PEX"
        ],
        "summary": "Get All Pex Client Scores By Filter",
        "description": "Get pages of PEX client score data based on provided filters\n\nRequired Permissions:\n\n- For any pex client any of: `match:*`, `match:pex:read`",
        "operationId": "get_all_pex_client_scores_by_filter",
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The maximum number of elements to be returned per call",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The maximum number of elements to be returned per call"
          },
          {
            "name": "to_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To Datetime"
            }
          },
          {
            "name": "from_datetime",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "title": "Time Zone Aware Datetime",
                  "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-01-23T21:07:02.000000+00:00"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From Datetime"
            }
          },
          {
            "name": "match_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Match Id"
            }
          },
          {
            "name": "region_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Id"
            }
          },
          {
            "name": "server_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Server Id"
            }
          },
          {
            "name": "allocation_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allocation Id"
            }
          },
          {
            "name": "datacenter_provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Provider"
            }
          },
          {
            "name": "datacenter_location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Datacenter Location"
            }
          },
          {
            "name": "machine_class",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Machine Class"
            }
          },
          {
            "name": "address_ip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Address Ip"
            }
          },
          {
            "name": "map_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Map Name"
            }
          },
          {
            "name": "game_mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Game Mode"
            }
          },
          {
            "name": "matchmaking_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Matchmaking Profile Id"
            }
          },
          {
            "name": "expected_team_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Team Size"
            }
          },
          {
            "name": "expected_player_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expected Player Count"
            }
          },
          {
            "name": "host_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Host Player Uuid"
            }
          },
          {
            "name": "owning_player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Owning Player Uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            }
          },
          {
            "name": "player_uuid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Player Uuid"
            }
          },
          {
            "name": "device_info",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Info"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PexClientPagedResponse"
                }
              }
            }
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pex/host": {
      "post": {
        "tags": [
          "PEX"
        ],
        "summary": "Create Pex Host",
        "description": "Create PEX Host\n\nRequired Permissions:\n\n- For any pex host any of: `match:*`, `match:pex:host:write`",
        "operationId": "create_pex_host",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PexHostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    },
    "/v1/pex/client": {
      "post": {
        "tags": [
          "PEX"
        ],
        "summary": "Create Pex Player",
        "description": "Create PEX Client\n\nRequired Permissions:\n\n- For any pex client any of: `match:*`, `match:pex:client:write`",
        "operationId": "create_pex_player",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PexClientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "403": {
            "description": "\nError Codes:\n- `auth_invalid_key_id` - Invalid Authorization - Invalid Key ID in Access Token\n- `auth_invalid_version` - Invalid Authorization - version\n- `auth_malformed_access` - Invalid Authorization - malformed access token\n- `auth_not_jwt` - Invalid Authorization\n- `auth_token_expired` - Token is expired\n- `auth_token_format` - Invalid Authorization - {}\n- `auth_token_invalid_claim` - Token contained invalid claim value: {}\n- `auth_token_invalid_type` - Invalid Authorization - Invalid Token Type\n- `auth_token_sig_invalid` - Token Signature is invalid\n- `auth_token_unknown` - Failed to parse token\n- `insufficient_permissions` - Insufficient Permissions\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HzApiErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearerHeadersOrCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HostType": {
        "type": "string",
        "enum": [
          "dedicated",
          "player"
        ],
        "title": "HostType",
        "description": "Whether the host is another player, or a dedicated instance"
      },
      "HzApiErrorModel": {
        "properties": {
          "auth_success": {
            "type": "boolean",
            "title": "Auth Success",
            "default": true
          },
          "error_code": {
            "type": "string",
            "title": "Error Code"
          },
          "desc": {
            "type": "string",
            "title": "Desc"
          }
        },
        "type": "object",
        "required": [
          "error_code",
          "desc"
        ],
        "title": "HzApiErrorModel"
      },
      "MatchAllocation": {
        "properties": {
          "allocation_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Allocation Id",
            "description": "Allocation ID"
          }
        },
        "type": "object",
        "required": [
          "allocation_id"
        ],
        "title": "MatchAllocation"
      },
      "MatchInstance": {
        "properties": {
          "instance_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Instance Id",
            "description": "Instance ID"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID the instance is in"
          },
          "instance_request_template_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance Request Template Id",
            "description": "Launch request template ID"
          },
          "map": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map",
            "description": "Map the instance is on"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode the instance is in"
          },
          "host_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HostType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of host"
          }
        },
        "type": "object",
        "required": [
          "instance_id"
        ],
        "title": "MatchInstance"
      },
      "MatchPlayerRequest": {
        "properties": {
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id",
            "description": "Team ID the player was on"
          },
          "party_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Party Session Id",
            "description": "Party session ID the player was in"
          },
          "placement": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placement",
            "description": "Placement of the player in the match"
          },
          "joined_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joined Match Timestamp",
            "description": "Time the player joined the match"
          },
          "left_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Match Timestamp",
            "description": "Time the player left the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds the player was in the match"
          },
          "starting_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starting Rank",
            "description": "Starting rank of the player in the match"
          },
          "finishing_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishing Rank",
            "description": "Finishing rank of the player in the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the player"
          }
        },
        "type": "object",
        "title": "MatchPlayerRequest"
      },
      "MatchPlayerResponse": {
        "properties": {
          "last_modified_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was last modified",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id",
            "description": "Team ID the player was on"
          },
          "party_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Party Session Id",
            "description": "Party session ID the player was in"
          },
          "placement": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placement",
            "description": "Placement of the player in the match"
          },
          "joined_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joined Match Timestamp",
            "description": "Time the player joined the match"
          },
          "left_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Match Timestamp",
            "description": "Time the player left the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds the player was in the match"
          },
          "starting_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starting Rank",
            "description": "Starting rank of the player in the match"
          },
          "finishing_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishing Rank",
            "description": "Finishing rank of the player in the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the player"
          }
        },
        "type": "object",
        "title": "MatchPlayerResponse"
      },
      "MatchPlayerWithMatch": {
        "properties": {
          "last_modified_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was last modified",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid"
          },
          "team_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Id",
            "description": "Team ID the player was on"
          },
          "party_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Party Session Id",
            "description": "Party session ID the player was in"
          },
          "placement": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placement",
            "description": "Placement of the player in the match"
          },
          "joined_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Joined Match Timestamp",
            "description": "Time the player joined the match"
          },
          "left_match_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Left Match Timestamp",
            "description": "Time the player left the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds the player was in the match"
          },
          "starting_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Starting Rank",
            "description": "Starting rank of the player in the match"
          },
          "finishing_rank": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finishing Rank",
            "description": "Finishing rank of the player in the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the player"
          },
          "match": {
            "$ref": "#/components/schemas/MatchValuesOnly",
            "description": "Match the player was in"
          }
        },
        "type": "object",
        "required": [
          "match"
        ],
        "title": "MatchPlayerWithMatch"
      },
      "MatchRequest": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerRequest"
            },
            "type": "array",
            "title": "Players",
            "description": "List of players in the match",
            "default": []
          },
          "segments": {
            "items": {
              "$ref": "#/components/schemas/MatchSegmentRequest"
            },
            "type": "array",
            "title": "Segments",
            "description": "List of segments for the match",
            "default": []
          }
        },
        "type": "object",
        "title": "MatchRequest"
      },
      "MatchSegmentPatchRequest": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerRequest"
            },
            "type": "array",
            "title": "Players",
            "description": "List of players in the match",
            "default": []
          }
        },
        "type": "object",
        "title": "MatchSegmentPatchRequest"
      },
      "MatchSegmentRequest": {
        "properties": {
          "match_segment": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "title": "Match Segment",
            "description": "Segment ID of the match"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerRequest"
            },
            "type": "array",
            "title": "Players",
            "description": "List of players in the match",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "match_segment"
        ],
        "title": "MatchSegmentRequest"
      },
      "MatchSegmentWithPlayers": {
        "properties": {
          "last_modified_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was last modified",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "match_segment": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "title": "Match Segment",
            "description": "Segment ID of the match"
          },
          "match_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Match Id"
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerResponse"
            },
            "type": "array",
            "title": "Players",
            "description": "List of players in the match",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "match_segment"
        ],
        "title": "MatchSegmentWithPlayers"
      },
      "MatchSession": {
        "properties": {
          "session_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Session Id",
            "description": "Session ID"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Profile ID"
          }
        },
        "type": "object",
        "required": [
          "session_id"
        ],
        "title": "MatchSession"
      },
      "MatchState": {
        "type": "string",
        "enum": [
          "pending",
          "closed"
        ],
        "title": "MatchState",
        "description": "Match States."
      },
      "MatchValuesOnly": {
        "properties": {
          "last_modified_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was last modified",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "match_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Match Id"
          }
        },
        "type": "object",
        "title": "MatchValuesOnly"
      },
      "MatchWithPlayers": {
        "properties": {
          "last_modified_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was last modified",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of match"
          },
          "state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MatchState"
              },
              {
                "type": "null"
              }
            ],
            "description": "State of the match"
          },
          "start_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Timestamp",
            "description": "Start time of the match"
          },
          "end_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Timestamp",
            "description": "End time of the match"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Duration in seconds of the match"
          },
          "custom_data": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Data",
            "description": "Custom data for the match"
          },
          "correlation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correlation Id",
            "description": "Correlation ID for the match"
          },
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/MatchSession"
            },
            "type": "array",
            "title": "Sessions",
            "description": "List of session IDs for the match",
            "default": []
          },
          "instances": {
            "items": {
              "$ref": "#/components/schemas/MatchInstance"
            },
            "type": "array",
            "title": "Instances",
            "description": "List of MatchInstances for the match",
            "default": []
          },
          "allocations": {
            "items": {
              "$ref": "#/components/schemas/MatchAllocation"
            },
            "type": "array",
            "title": "Allocations",
            "description": "List of allocation IDs for the match",
            "default": []
          },
          "match_id": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Match Id"
          },
          "segments": {
            "items": {
              "$ref": "#/components/schemas/MatchSegmentWithPlayers"
            },
            "type": "array",
            "title": "Segments",
            "description": "List of segments for the match",
            "default": []
          },
          "players": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerResponse"
            },
            "type": "array",
            "title": "Players",
            "description": "List of players in the match",
            "default": []
          }
        },
        "type": "object",
        "title": "MatchWithPlayers"
      },
      "PagedMatchResponse": {
        "properties": {
          "matches": {
            "items": {
              "$ref": "#/components/schemas/MatchWithPlayers"
            },
            "type": "array",
            "title": "Matches",
            "description": "List of matches",
            "default": []
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor",
            "description": "Base64 encoded json that contains the filters and cursor position"
          }
        },
        "type": "object",
        "title": "PagedMatchResponse"
      },
      "PagedPlayerMatchResponse": {
        "properties": {
          "player_matches": {
            "items": {
              "$ref": "#/components/schemas/MatchPlayerWithMatch"
            },
            "type": "array",
            "title": "Player Matches",
            "description": "List of player's matches",
            "default": []
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor",
            "description": "Base64 encoded json that contains the filters and cursor position"
          }
        },
        "type": "object",
        "title": "PagedPlayerMatchResponse"
      },
      "PexClientPagedResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/PexClientResponse"
            },
            "type": "array",
            "title": "Results",
            "description": "List of PEX reports for this match",
            "default": []
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor",
            "description": "Base64 encoded json that contains the filters and cursor position"
          },
          "filters": {
            "$ref": "#/components/schemas/PexClientQueryParams"
          }
        },
        "type": "object",
        "title": "PexClientPagedResponse"
      },
      "PexClientQueryParams": {
        "properties": {
          "to_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Datetime",
            "description": "To datetime"
          },
          "from_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Datetime",
            "description": "From datetime"
          },
          "match_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "machine_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Class",
            "description": "Machine class"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "player_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Player Uuid"
          },
          "device_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Info"
          }
        },
        "type": "object",
        "title": "PexClientQueryParams"
      },
      "PexClientRequest": {
        "properties": {
          "frame_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Frametime"
          },
          "delta_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delta time"
          },
          "tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Server tick rate"
          },
          "delayed_tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delayed tick count"
          },
          "memory_ws": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory working set"
          },
          "memory_vb": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory video buffer"
          },
          "cpu_process": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "CPU process"
          },
          "ping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Average ping across players"
          },
          "in_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets metrics"
          },
          "out_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets metrics"
          },
          "total_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets metrics"
          },
          "in_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets lost metrics"
          },
          "out_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets lost metrics"
          },
          "total_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets lost metrics"
          },
          "in_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage in"
          },
          "out_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage out"
          },
          "total_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packet lost percentage"
          },
          "total_disconnects": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total disconnects"
          },
          "match_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Match duration"
          },
          "game_thread_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Game thread time"
          },
          "render_thread_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Render thread time"
          },
          "gpu_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "GPU time"
          },
          "match_id": {
            "type": "string",
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "Player UUID"
          },
          "device_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Info",
            "description": "Device information"
          }
        },
        "type": "object",
        "required": [
          "match_id",
          "player_uuid"
        ],
        "title": "PexClientRequest"
      },
      "PexClientResponse": {
        "properties": {
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "frame_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Frametime"
          },
          "delta_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delta time"
          },
          "tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Server tick rate"
          },
          "delayed_tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delayed tick count"
          },
          "memory_ws": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory working set"
          },
          "memory_vb": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory video buffer"
          },
          "cpu_process": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "CPU process"
          },
          "ping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Average ping across players"
          },
          "in_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets metrics"
          },
          "out_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets metrics"
          },
          "total_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets metrics"
          },
          "in_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets lost metrics"
          },
          "out_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets lost metrics"
          },
          "total_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets lost metrics"
          },
          "in_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage in"
          },
          "out_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage out"
          },
          "total_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packet lost percentage"
          },
          "total_disconnects": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total disconnects"
          },
          "match_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Match duration"
          },
          "game_thread_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Game thread time"
          },
          "render_thread_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Render thread time"
          },
          "gpu_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "GPU time"
          },
          "scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexClientScores"
              },
              {
                "type": "null"
              }
            ],
            "description": "Scores"
          },
          "match_id": {
            "type": "string",
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "player_uuid": {
            "type": "string",
            "format": "uuid",
            "title": "Player Uuid",
            "description": "Player UUID"
          },
          "device_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Info",
            "description": "Device information"
          }
        },
        "type": "object",
        "required": [
          "match_id",
          "player_uuid"
        ],
        "title": "PexClientResponse"
      },
      "PexClientScores": {
        "properties": {
          "overall_match_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Match Score",
            "description": "Overall match score"
          },
          "app_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Score",
            "description": "App game score"
          },
          "gameplay_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gameplay Score",
            "description": "Gameplay score"
          },
          "network_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Network Score",
            "description": "Network score"
          },
          "connection_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Count Score",
            "description": "Connection count score"
          },
          "frame_time_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frame Time Score",
            "description": "Frame time score"
          },
          "delta_time_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delta Time Score",
            "description": "Delta time score"
          },
          "tick_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tick Count Score",
            "description": "Tick count score"
          },
          "delayed_tick_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delayed Tick Count Score",
            "description": "Delayed tick count score"
          },
          "memory_ws_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Ws Score",
            "description": "Memory working set score"
          },
          "memory_vb_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Vb Score",
            "description": "Memory video buffer score"
          },
          "cpu_process_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Process Score",
            "description": "CPU process score"
          },
          "ping_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ping Score",
            "description": "Ping score"
          },
          "in_packet_loss_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Packet Loss Score",
            "description": "In packet loss score"
          },
          "out_packet_loss_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Out Packet Loss Score",
            "description": "Out packet loss score"
          },
          "total_disconnects_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Disconnects Score",
            "description": "Total disconnects score"
          }
        },
        "type": "object",
        "title": "PexClientScores"
      },
      "PexCount": {
        "properties": {
          "count": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count",
            "description": "Count of values"
          }
        },
        "type": "object",
        "title": "PexCount"
      },
      "PexHostPagedResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/PexHostResponse"
            },
            "type": "array",
            "title": "Results",
            "description": "List of PEX reports for this match",
            "default": []
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor",
            "description": "Base64 encoded json that contains the filters and cursor position"
          },
          "filters": {
            "$ref": "#/components/schemas/PexHostQueryParams"
          }
        },
        "type": "object",
        "title": "PexHostPagedResponse"
      },
      "PexHostQueryParams": {
        "properties": {
          "to_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Datetime",
            "description": "To datetime"
          },
          "from_datetime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time",
                "title": "Time Zone Aware Datetime",
                "description": "Datetime that enforces that a timezone is given. Unix timestamps are allowed and forced into the UTC time zone",
                "example": "2023-01-23T21:07:02.000000+00:00"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Datetime",
            "description": "From datetime"
          },
          "match_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "machine_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Class",
            "description": "Machine class"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          }
        },
        "type": "object",
        "title": "PexHostQueryParams"
      },
      "PexHostRequest": {
        "properties": {
          "frame_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Frametime"
          },
          "delta_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delta time"
          },
          "tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Server tick rate"
          },
          "delayed_tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delayed tick count"
          },
          "memory_ws": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory working set"
          },
          "memory_vb": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory video buffer"
          },
          "cpu_process": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "CPU process"
          },
          "ping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Average ping across players"
          },
          "in_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets metrics"
          },
          "out_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets metrics"
          },
          "total_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets metrics"
          },
          "in_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets lost metrics"
          },
          "out_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets lost metrics"
          },
          "total_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets lost metrics"
          },
          "in_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage in"
          },
          "out_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage out"
          },
          "total_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packet lost percentage"
          },
          "total_disconnects": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total disconnects"
          },
          "match_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Match duration"
          },
          "connection_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Connection count"
          },
          "total_unique_players": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total players"
          },
          "match_id": {
            "type": "string",
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "machine_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Class",
            "description": "Machine class"
          }
        },
        "type": "object",
        "required": [
          "match_id"
        ],
        "title": "PexHostRequest"
      },
      "PexHostResponse": {
        "properties": {
          "created_timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Time Zone Aware Datetime",
            "description": "Timestamp of when the resource was created",
            "example": "2023-01-23T21:07:02.000000+00:00"
          },
          "frame_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Frametime"
          },
          "delta_time": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delta time"
          },
          "tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Server tick rate"
          },
          "delayed_tick_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Delayed tick count"
          },
          "memory_ws": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory working set"
          },
          "memory_vb": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Memory video buffer"
          },
          "cpu_process": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "CPU process"
          },
          "ping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Average ping across players"
          },
          "in_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets metrics"
          },
          "out_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets metrics"
          },
          "total_packets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets metrics"
          },
          "in_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "In packets lost metrics"
          },
          "out_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Out packets lost metrics"
          },
          "total_packet_loss": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packets lost metrics"
          },
          "in_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage in"
          },
          "out_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Packets lost percentage out"
          },
          "total_packet_loss_pct": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total packet lost percentage"
          },
          "total_disconnects": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total disconnects"
          },
          "match_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Match duration"
          },
          "connection_count": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexStat"
              },
              {
                "type": "null"
              }
            ],
            "description": "Connection count"
          },
          "total_unique_players": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexCount"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total players"
          },
          "scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PexHostScores"
              },
              {
                "type": "null"
              }
            ],
            "description": "Scores"
          },
          "match_id": {
            "type": "string",
            "title": "Match Id",
            "description": "Match ID"
          },
          "region_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region Id",
            "description": "Region ID"
          },
          "server_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Id",
            "description": "Server ID"
          },
          "allocation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allocation Id",
            "description": "Allocation ID"
          },
          "datacenter_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Provider",
            "description": "Datacenter provider"
          },
          "datacenter_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datacenter Location",
            "description": "Datacenter location"
          },
          "address_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Ip",
            "description": "IP address"
          },
          "map_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Map Name",
            "description": "Map name"
          },
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode",
            "description": "Game mode"
          },
          "matchmaking_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matchmaking Profile Id",
            "description": "Matchmaking profile ID"
          },
          "expected_team_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Team Size",
            "description": "Expected team size"
          },
          "expected_player_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Player Count",
            "description": "Expected player count"
          },
          "host_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Host Player Uuid",
            "description": "Player UUID of the host"
          },
          "owning_player_uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owning Player Uuid",
            "description": "Player UUID of the owner"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "Version"
          },
          "machine_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Machine Class",
            "description": "Machine class"
          }
        },
        "type": "object",
        "required": [
          "match_id"
        ],
        "title": "PexHostResponse"
      },
      "PexHostScores": {
        "properties": {
          "overall_match_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overall Match Score",
            "description": "Overall match score"
          },
          "app_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Score",
            "description": "App game score"
          },
          "gameplay_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gameplay Score",
            "description": "Gameplay score"
          },
          "network_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Network Score",
            "description": "Network score"
          },
          "connection_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Count Score",
            "description": "Connection count score"
          },
          "frame_time_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frame Time Score",
            "description": "Frame time score"
          },
          "delta_time_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delta Time Score",
            "description": "Delta time score"
          },
          "tick_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tick Count Score",
            "description": "Tick count score"
          },
          "delayed_tick_count_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delayed Tick Count Score",
            "description": "Delayed tick count score"
          },
          "memory_ws_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Ws Score",
            "description": "Memory working set score"
          },
          "memory_vb_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Vb Score",
            "description": "Memory video buffer score"
          },
          "cpu_process_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Process Score",
            "description": "CPU process score"
          },
          "ping_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ping Score",
            "description": "Ping score"
          },
          "in_packet_loss_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Packet Loss Score",
            "description": "In packet loss score"
          },
          "out_packet_loss_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Out Packet Loss Score",
            "description": "Out packet loss score"
          },
          "total_disconnects_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Disconnects Score",
            "description": "Total disconnects score"
          },
          "total_unique_players_score": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Unique Players Score",
            "description": "Total players score"
          }
        },
        "type": "object",
        "title": "PexHostScores"
      },
      "PexStat": {
        "properties": {
          "min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min",
            "description": "Minimum value"
          },
          "max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max",
            "description": "Maximum value"
          },
          "avg": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg",
            "description": "Average value"
          },
          "stddev": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stddev",
            "description": "Standard deviation"
          }
        },
        "type": "object",
        "title": "PexStat"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearerHeadersOrCookie": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Match",
      "description": "Match data is meant to store historical match information - including players, and related metadata.\n\nMatches are searchable on the Support Portal, and there are endpoints to query a player's matches or all matches in the system.\n\nEach match can also contain many Match Segments - which are sub-components of the overall match.  They contain the same fields as the match.  Common usage of Match Segments would be laps of a race to record player positions, minute intervals to record the state of the game partway through, rounds of play, or minigames within a larger match.\n"
    },
    {
      "name": "PEX",
      "description": "Player Experience (PEX) is a system for Clients/Hosts to post metrics to for top-level analysis."
    }
  ]
}
